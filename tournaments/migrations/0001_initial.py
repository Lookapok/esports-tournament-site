# Generated by Django 5.2.5 on 2025-09-24 03:13

import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Team',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='隊伍名稱')),
                ('logo', models.ImageField(blank=True, null=True, upload_to='team_logos/', verbose_name='隊伍Logo')),
            ],
        ),
        migrations.CreateModel(
            name='Player',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nickname', models.CharField(max_length=100, verbose_name='遊戲內暱稱')),
                ('avatar', models.ImageField(blank=True, null=True, upload_to='player_avatars/', verbose_name='選手頭像')),
                ('role', models.CharField(choices=[('Duelist', '決鬥者'), ('Initiator', '先鋒'), ('Controller', '煙位'), ('Sentinel', '守衛'), ('Flex', '自由位')], default='Flex', max_length=20, verbose_name='角色定位')),
                ('team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='players', to='tournaments.team', verbose_name='所屬隊伍')),
            ],
        ),
        migrations.CreateModel(
            name='Tournament',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='賽事名稱')),
                ('game', models.CharField(max_length=100, verbose_name='遊戲名稱')),
                ('start_date', models.DateTimeField(default=django.utils.timezone.now, verbose_name='報名開始日期')),
                ('end_date', models.DateTimeField(verbose_name='賽事結束日期')),
                ('rules', models.TextField(verbose_name='賽事規章')),
                ('status', models.CharField(choices=[('upcoming', '尚未開始'), ('ongoing', '進行中'), ('finished', '已結束')], default='upcoming', max_length=10, verbose_name='賽事狀態')),
                ('format', models.CharField(choices=[('single_elimination', '單敗淘汰'), ('double_elimination', '雙敗淘汰'), ('round_robin', '分組循環'), ('swiss', '瑞士輪')], default='single_elimination', max_length=20, verbose_name='賽制')),
                ('participants', models.ManyToManyField(blank=True, related_name='tournaments', to='tournaments.team', verbose_name='參賽隊伍')),
            ],
        ),
        migrations.CreateModel(
            name='Match',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('round_number', models.PositiveIntegerField(verbose_name='比賽輪次')),
                ('team1_score', models.PositiveIntegerField(default=0, verbose_name='隊伍一得分')),
                ('team2_score', models.PositiveIntegerField(default=0, verbose_name='隊伍二得分')),
                ('match_time', models.DateTimeField(blank=True, null=True, verbose_name='預計比賽時間')),
                ('status', models.CharField(choices=[('scheduled', '尚未開始'), ('completed', '已結束')], default='scheduled', max_length=10, verbose_name='比賽狀態')),
                ('is_lower_bracket', models.BooleanField(default=False, verbose_name='是否為敗部賽')),
                ('team1', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='matches_as_team1', to='tournaments.team', verbose_name='隊伍一')),
                ('team2', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='matches_as_team2', to='tournaments.team', verbose_name='隊伍二')),
                ('winner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='won_matches', to='tournaments.team', verbose_name='勝者')),
                ('tournament', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='matches', to='tournaments.tournament', verbose_name='所屬賽事')),
            ],
        ),
        migrations.CreateModel(
            name='Group',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='組別名稱')),
                ('teams', models.ManyToManyField(related_name='tournament_groups', to='tournaments.team', verbose_name='組內隊伍')),
                ('tournament', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='groups', to='tournaments.tournament', verbose_name='所屬賽事')),
            ],
        ),
        migrations.CreateModel(
            name='PlayerMatchStat',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('kills', models.PositiveIntegerField(default=0, verbose_name='擊殺')),
                ('deaths', models.PositiveIntegerField(default=0, verbose_name='死亡')),
                ('assists', models.PositiveIntegerField(default=0, verbose_name='助攻')),
                ('first_kills', models.PositiveIntegerField(default=0, verbose_name='首殺')),
                ('acs', models.FloatField(default=0.0, verbose_name='ACS')),
                ('match', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='player_stats', to='tournaments.match', verbose_name='對應比賽')),
                ('player', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='match_stats', to='tournaments.player', verbose_name='選手')),
                ('team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tournaments.team', verbose_name='代表隊伍')),
            ],
            options={
                'verbose_name': '選手比賽數據',
                'verbose_name_plural': '選手比賽數據',
                'unique_together': {('match', 'player')},
            },
        ),
        migrations.CreateModel(
            name='Standing',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('wins', models.PositiveIntegerField(default=0, verbose_name='勝場')),
                ('losses', models.PositiveIntegerField(default=0, verbose_name='敗場')),
                ('draws', models.PositiveIntegerField(default=0, verbose_name='平局')),
                ('points', models.IntegerField(default=0, verbose_name='積分')),
                ('group', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='standings', to='tournaments.group', verbose_name='所屬分組')),
                ('team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='standings', to='tournaments.team', verbose_name='隊伍')),
                ('tournament', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='standings', to='tournaments.tournament', verbose_name='所屬賽事')),
            ],
            options={
                'unique_together': {('tournament', 'team')},
            },
        ),
    ]
